<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.swime.mapper.StudyMapper">

    <select id="getList" resultType="com.swime.domain.StudyVO">
    <![CDATA[
         select s.sn, s.grp_sn, u.id as representation, u.name as representation_name, s.name, s.start_date, s.end_date, s.start_time, s.end_time, s.repeat_cycle, s.repeat_day, s.information, s.on_off, s.on_url, s.place_id, s.expense, s.capacity, s.status, s.reg_date, s.upd_date
         from tstd s, tuser u
         where s.representation = u.id and s.status in ('STST01', 'STST03')
        ]]>
    </select>

    <select id="getListWithPaging" resultType="com.swime.domain.StudyVO">
    <![CDATA[
        select *
        from (
                 select /*+ index_desc(tstd pk_tstd)*/
                     rownum rn, s.sn, s.grp_sn, u.id as representation, u.name as representation_name, s.name, s.start_date, s.end_date, s.start_time, s.end_time, s.repeat_cycle, s.repeat_day, s.information, s.on_off, s.on_url, s.place_id, s.expense, s.capacity, s.status, s.reg_date, s.upd_date
                 from tstd s, tuser u
                 where s.representation = u.id and s.status in ('STST01', 'STST03') and rownum <= #{pageNum} * #{amount}
             )
        where rn > (#{pageNum} - 1) * #{amount}
    ]]>
    </select>

    <insert id="insert">
        insert into tstd (sn, grp_sn, representation, name, start_date, end_date, start_time, end_time, repeat_cycle, repeat_day, information, on_off, on_url, place_id, expense, capacity, status, reg_date, upd_date)
        values(seq_std.nextval, #{grpSn}, #{representation}, #{name}, to_date(#{startDate}, 'YYYY-MM-DD'), to_date(#{endDate}, 'YYYY-MM-DD'), to_char(to_date(#{startTime} , 'YYYY-MM-DD HH24:MI:SS'), 'HH24:MI:SS'), to_char(to_date(#{endTime} , 'YYYY-MM-DD HH24:MI:SS'), 'HH24:MI:SS'), #{repeatCycle}, #{repeatDay}, #{information}, #{onOff}, #{onUrl}, #{placeId}, #{expense}, #{capacity}, 'STST01', current_date, current_date)
    </insert>

    <insert id="insertSelectKey">
        <selectKey keyProperty="sn" order="BEFORE" resultType="long">
            select seq_std.nextval from dual
        </selectKey>

        insert into tstd (sn, grp_sn, representation, name, start_date, end_date, start_time, end_time, repeat_cycle, repeat_day, information, on_off, on_url, place_id, expense, capacity, status, reg_date, upd_date)
        values(#{sn}, #{grpSn}, #{representation}, #{name}, to_date(#{startDate}, 'YYYY-MM-DD'), to_date(#{endDate}, 'YYYY-MM-DD'), to_char(to_date(#{startTime} , 'YYYY-MM-DD HH24:MI:SS'), 'HH24:MI:SS'), to_char(to_date(#{endTime} , 'YYYY-MM-DD HH24:MI:SS'), 'HH24:MI:SS'), #{repeatCycle}, #{repeatDay}, #{information}, #{onOff}, #{onUrl}, #{placeId}, #{expense}, #{capacity}, 'STST01', current_date, current_date)
        </insert>

    <select id="get" resultType="com.swime.domain.StudyVO">
        select s.sn, s.grp_sn, u.id as representation, u.name as representation_name, s.name, s.start_date, s.end_date, s.start_time, s.end_time, s.repeat_cycle, s.repeat_day, s.information, s.on_off, s.on_url, s.place_id, s.expense, s.capacity, s.status, s.reg_date, s.upd_date
        from tstd s, tuser u
        where s.representation = u.id and s.status in ('STST01', 'STST03') and s.sn = #{sn}
    </select>

    <update id="update">
        update tstd
        set name = #{name},
        start_date = to_date(#{startDate}, 'YYYY-MM-DD'),
        end_date = to_date(#{endDate}, 'YYYY-MM-DD'),
        repeat_cycle = #{repeatCycle, jdbcType=VARCHAR},
        repeat_day = #{repeatDay, jdbcType=VARCHAR},
        start_time = to_char(to_date(#{startTime} , 'YYYY-MM-DD HH24:MI:SS'), 'HH24:MI:SS'),
        end_time = to_char(to_date(#{endTime} , 'YYYY-MM-DD HH24:MI:SS'), 'HH24:MI:SS'),
        information = #{information},
        on_off = #{onOff, jdbcType=VARCHAR},
        on_url = #{onUrl, jdbcType=VARCHAR},
        place_id = #{placeId, jdbcType=VARCHAR},
        expense = #{expense, jdbcType=VARCHAR},
        capacity = #{capacity},
        upd_date = current_date
        where sn = #{sn}
    </update>

    <update id = "updateStatus">
        update tstd
        set status= #{status},
            upd_date = current_date
        where sn = #{sn}
    </update>

</mapper>