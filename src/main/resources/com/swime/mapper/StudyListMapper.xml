<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.swime.mapper.StudyListMapper">

    <select id="getList" resultType="com.swime.domain.StudyListVO">
        select sl.sn, sl.std_sn, u.picture, sl.user_id, u.name user_name, gl.grp_role, sl.status, sl.reg_date
        from tstd_list sl, tuser u, tstd s, tgrp_list gl
        where sl.std_sn = #{stdSn} and sl.user_id = u.id and sl.std_sn = s.sn and s.grp_sn = gl.grp_sn and sl.user_id = gl.user_id
          and sl.status = #{status}
        order by sl.reg_date
    </select>

    <select id="getListWithPaging" resultType="com.swime.domain.StudyListVO">
    <![CDATA[
        select *
        from (
             select *
             from (
                  select rownum rn, sl.sn, sl.std_sn, u.picture, sl.user_id, u.name user_name, gl.grp_role, sl.status, sl.reg_date
                  from tstd_list sl, tuser u, tstd s, tgrp_list gl
                  where sl.std_sn = #{param.stdSn} and sl.user_id = u.id and sl.std_sn = s.sn and s.grp_sn = gl.grp_sn and sl.user_id = gl.user_id
                    and sl.status = #{param.status}
                  order by sn
                  )
             where rownum <= #{cri.pageNum} * #{cri.amount}
             )
        where rn > (#{cri.pageNum} - 1) * #{cri.amount}
        ]]>
    </select>


    <select id="getStudiesOfGroup" resultType="com.swime.domain.StudyVO">
        select gl.grp_sn, sl.std_sn sn, s.name, sl.status, sl.user_id
        from tstd s, tstd_list sl, tgrp_list gl
        where s.sn = sl.std_sn and s.grp_sn = gl.grp_sn and gl.user_id = sl.user_id
          and gl.grp_sn = #{grpSn} and gl.user_id = #{userId} and sl.status = 'STUS01'
    </select>

    <select id="getNoRatingStudies" resultType="com.swime.domain.StudyVO">
        select gl.grp_sn, sl.std_sn sn, s.name, sl.status, sl.user_id
        from tstd s, tstd_list sl, tgrp_list gl
        where s.sn = sl.std_sn and s.grp_sn = gl.grp_sn and gl.user_id = sl.user_id
          and gl.grp_sn = #{grpSn} and gl.user_id = #{userId} and sl.status = 'STUS01'
          and s.sn not in (select std_sn
                           from tgrp_rating
                           where grp_sn=#{grpSn} and user_id=#{userId})
          and (select (current_date - (select s.end_date from tstd where sn = s.sn)) * 24 * 60 as min_diff from dual) > 0
        order by s.start_date desc
    </select>

    <select id="getAttendant" resultType="com.swime.domain.StudyListVO">
        select std_sn, user_id, status
        from tstd_list
        where std_sn = #{stdSn} and user_id = #{userId}
    </select>

    <insert id="insert">
        insert into tstd_list (sn, std_sn, user_id, status, reg_date)
        values(seq_std_list.nextval, #{stdSn}, #{userId}, #{status}, current_date)
    </insert>

    <update id="update">
        update tstd_list
        set status = #{status}
        where std_sn = #{stdSn} and user_id = #{userId}
    </update>

    <update id="delete">
        delete from tstd_list
        where std_sn = #{stdSn} and user_id = #{userId}
    </update>

    <select id="count" resultType="int">
        select count(*)
        from tstd_list
        where std_sn = #{stdSn} and status='STUS01'
    </select>

</mapper>